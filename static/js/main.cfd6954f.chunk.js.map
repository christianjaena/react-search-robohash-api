{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBar.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["Card","id","username","name","email","className","alt","src","CardList","cardListComponent","robots","map","robot","SearchBar","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAaeA,EAXF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAChC,OACI,yBAAKC,UAAU,uDACX,yBAAKC,IAAI,QAAQC,IAAG,+BAA0BN,EAA1B,cACpB,4BAAMC,GACN,4BAAMC,GACN,2BAAKC,KCaFI,EAlBE,SAAC,GAAgB,IAExBC,EAFuB,EAAbC,OAEiBC,KAAI,SAAAC,GACjC,OAAO,kBAAC,EAAD,CACCX,GAAOW,EAAMX,GACbE,KAASS,EAAMT,KACfD,SAAaU,EAAMV,SACnBE,MAAUQ,EAAMR,WAI5B,OACI,6BACMK,ICCCI,G,MAdG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,yBAAKT,UAAU,WACX,wBAAIA,UAAU,MAAd,eACA,2BACAA,UAAU,yCACVU,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCDRI,EARA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCkBLC,E,kDAnBX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,UAAU,GAHJ,E,8DAOIC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,wDAEJG,KAAKX,MAAMK,a,GAhBEQ,IAAMC,WCwCnBC,E,kDArCX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SAP1C,EAAKb,MAAQ,CACThB,OAAQ,GACR2B,YAAa,IAJP,E,gEAYO,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAAErB,OAAQkC,S,+BAGjC,IAAD,EAC2Bd,KAAKJ,MAA7BhB,EADH,EACGA,OAAQ2B,EADX,EACWA,YACVQ,EAAiBnC,EAAOoC,QAAO,SAAAlC,GACjC,OAAOA,EAAMT,KAAK4C,cAAcC,SAASX,EAAYU,kBAEzD,OAASrC,EAAOuC,OAEZ,yBAAK5C,UAAU,MACX,kBAAC,EAAD,CAAWS,aAAegB,KAAKK,iBAC/B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUzB,OAASmC,OAL/B,wBAAIxC,UAAU,MAAd,e,GAzBM4B,a,YCElBiB,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.cfd6954f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, username, name, email }) => {\r\n    return(\r\n        <div className=\"tc dib bg-light-green br3 pa3 ma3 grow bw2 shadow-5\">\r\n            <img alt=\"robot\" src={`https://robohash.org/${id}?200x200`}/>\r\n            <h1>{ username }</h1>\r\n            <h3>{ name }</h3>\r\n            <p>{ email }</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    \r\n    const cardListComponent = robots.map(robot => {\r\n        return <Card \r\n                id = { robot.id }\r\n                name = { robot.name }\r\n                username = { robot.username }\r\n                email = { robot.email }\r\n                />\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            { cardListComponent }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar = ({ searchChange }) => {\r\n    return(\r\n        <div className=\"pa2 ma2\">\r\n            <h1 className=\"f1\">Robofriends</h1>\r\n            <input \r\n            className=\"pa3 ba b--light-green bg-lightest-blue\"\r\n            type=\"search\"\r\n            placeholder=\"search robots\"\r\n            onChange={ searchChange }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '100vh' }}>\r\n            { props.children }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops! That is not good.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return (!robots.length) ?\r\n            <h1 className=\"tc\">Loading</h1> :\r\n            <div className=\"tc\">\r\n                <SearchBar searchChange={ this.onSearchChange }/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={ filteredRobots }/>\r\n                    </ErrorBoundary>\r\n                    \r\n                </Scroll>\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\nimport './index.css';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}